@model SAM.Taskboard.Model.Board.CreateColumnViewModel

<div id="addColumnModalForm">
    @using (Html.BeginForm("AddColumn", "Board", FormMethod.Post, new { id = "addColumnForm" }))
    {
        @Html.AntiForgeryToken()
        <div class="modal-body">
            @Html.HiddenFor(m => m.BoardId)

            <div class="row justify-content-center">
                <div class="form-group">
                    @Html.TextBoxFor(m => m.Title, new { type = "text", @class = "form-control", placeholder = "Column name", style = "width: 250px" })
                    @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger small" })
                </div>
            </div>

            <div class="row justify-content-center mt-1 mb-2 text-danger small">
                @Html.ValidationMessage("Error")
            </div>
        </div>

        <div class="modal-footer">
            <button id="closeColumnModal" type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            <button id="addColumn" type="submit" class="btn btn-primary">Create</button>
        </div>
    }
</div>

<script>
    $('#addColumn').click(function () {
        const request = $.ajax({
            type: "POST",
            url: '@Url.Action("CreateColumn", "Board")',
            data: $('#addColumnForm').serialize()
        });

        request.done(function () {
            $('#closeModal').click();
            location.reload();
        });

        request.fail(function (jqXHR) {
            if (jqXHR.status == 400) {
                $("#addColumnModalForm").html(jqXHR.responseText);
            }
        });
    });

    $('#addColumn').click(function(e){
        e.preventDefault();
    });
</script>

