@using System.Security.Claims;
@{
    var identity = (ClaimsIdentity)User.Identity;
    IEnumerable<Claim> claims = identity.Claims;
    string theme = claims.FirstOrDefault(u => u.Type == "Theme").Value;
}

@model SAM.Taskboard.Model.Project.ProjectsViewModel

<div class="container w-100">
    <div class="d-flex flex-column align-items-center justify-content-center w-100 pt-3">

        @Html.Partial("ProjectsList", Model)

        <div class="modal fade" id="createProjectModal" tabindex="-1" role="dialog">
            @Html.Partial("CreateProject", new SAM.Taskboard.Model.Project.CreateProjectViewModel())
        </div>

        @if (Model.PagesCount > 1)
        {
            <ul class="pagination ">
                <li class="page-item">
                    <a class="page-link theme-background-@theme theme-border-@theme" href=@Url.Action("AllProjects", new { page = Model.CurrentPage > 1 ? Model.CurrentPage - 1 : 1 })>
                        Previous
                    </a>
                </li>
                @foreach (int pageNumber in Model.Pages)
                {
                    <li class='page-item @(Model.CurrentPage == pageNumber ? "active" : String.Empty)'>
                        <a class="page-link theme-background-@theme theme-border-@theme" href=@Url.Action("AllProjects", new { page = pageNumber })>
                            @pageNumber
                        </a>
                    </li>
                }
                <li class="page-item">
                    <a class="page-link theme-background-@theme theme-border-@theme" href=@Url.Action("AllProjects", new { page = Model.CurrentPage < Model.PagesCount ? Model.CurrentPage + 1 : Model.PagesCount })>
                        Next
                    </a>
                </li>
            </ul>
        }
    </div>
</div>